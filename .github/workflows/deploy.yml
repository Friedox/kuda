name: Deploy Docker Compose Project

on:
  workflow_run:
    workflows: ["Test and Generate Coverage Badge"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key

      - name: Check SSH connectivity
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo SSH connection established"

      - name: Update repository on remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd /kuda && git pull'

      - name: Create .env file from secrets
        run: |
          echo APP_CONFIG__DATABASE__DB_USER=${{ secrets.APP_CONFIG__DATABASE__DB_USER }} > .env
          echo APP_CONFIG__DATABASE__DB_PASSWORD=${{ secrets.APP_CONFIG__DATABASE__DB_PASSWORD }} >> .env
          echo APP_CONFIG__DATABASE__DB_NAME=${{ secrets.APP_CONFIG__DATABASE__DB_NAME }} >> .env
          echo APP_CONFIG__TEST_DATABASE__DB_USER=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_USER }} >> .env
          echo APP_CONFIG__TEST_DATABASE__DB_PASSWORD=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_PASSWORD }} >> .env
          echo APP_CONFIG__TEST_DATABASE__DB_NAME=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_NAME }} >> .env
          echo APP_CONFIG__TEST_DATABASE__DB_HOST=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_HOST }} >> .env
          echo APP_CONFIG__ENV__IS_TEST=0 >> .env
          echo APP_CONFIG__GEOCODER__API_KEY=${{ secrets.APP_CONFIG__GEOCODER__API_KEY }} >> .env
          echo APP_CONFIG__GEOCODER__URL=${{ secrets.APP_CONFIG__GEOCODER__URL }} >> .env
          echo APP_CONFIG__GOOGLE__CLIENT_ID=${{ secrets.APP_CONFIG__GOOGLE__CLIENT_ID }} >> .env
          echo APP_CONFIG__GOOGLE__CLIENT_SECRET=${{ secrets.APP_CONFIG__GOOGLE__CLIENT_SECRET }} >> .env
          echo APP_CONFIG__GOOGLE__REDIRECT_URI=${{ secrets.APP_CONFIG__GOOGLE__REDIRECT_URI }} >> .env
          echo APP_CONFIG__REDIS__HOST=${{ secrets.APP_CONFIG__REDIS__HOST }} >> .env
          echo APP_CONFIG__REDIS__EXPIRE_TIME=${{ secrets.APP_CONFIG__REDIS__EXPIRE_TIME }} >> .env
          chmod 600 .env

      - name: Copy .env file to remote server
        run: |
          scp -o StrictHostKeyChecking=no -i ssh_key .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/kuda/backend

      - name: Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /kuda
            docker compose --env-file ./backend/.env up --build -d
          EOF

      - name: Cleanup local .env file
        run: rm -f .env

      - name: Cleanup SSH key file
        run: rm -f ssh_key
