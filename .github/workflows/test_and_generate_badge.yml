name: Test and Generate Coverage Badge

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file from secrets
        run: |
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} > .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo TEST_POSTGRES_DB=${{ secrets.TEST_POSTGRES_DB }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo REDIRECT_URI=${{ secrets.REDIRECT_URI }} >> .env
          chmod 600 .env

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.test.yml up --build -d
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ls
          pip install -r ./backend/app/requirements.txt
          
      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage html

      - name: Generate coverage report in XML format
        run: |
          coverage xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate coverage badge
        run: |
          COVERAGE_PERCENT=$(curl -s https://coveralls.io/repos/github/${{ github.repository }}/badge.svg?branch=main | grep -oP '\d+%' | tr -d '%')
          echo "![Coverage](https://img.shields.io/badge/Coverage-${COVERAGE_PERCENT}%25-brightgreen)" > coverage-badge.md

      - name: Commit coverage badge
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git add coverage-badge.md
          git commit -m "Add coverage badge"
          git remote set-url origin https://Friedox:$GITHUB_TOKEN@github.com/Friedox/kuda
          git push origin main
          

      - name: Cleanup
        run: |
          docker-compose -f docker-compose.test.yml down
